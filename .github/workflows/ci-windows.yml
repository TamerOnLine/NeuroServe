name: CI (Windows)

on:
  push:
  pull_request:

env:
  
  HF_HOME: 'C:\models_cache\hf'
  TORCH_HOME: 'C:\models_cache\torch'
  TRANSFORMERS_CACHE: 'C:\models_cache\hf'
  FORCE_CPU: "1"

jobs:
  tests:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Prepare caches
        shell: powershell
        run: |
          New-Item -ItemType Directory -Force -Path $env:HF_HOME | Out-Null
          New-Item -ItemType Directory -Force -Path $env:TORCH_HOME | Out-Null

      - name: Cache model files (HF/Torch)
        uses: actions/cache@v4
        with:
          path: |
            C:\models_cache\hf
            C:\models_cache\torch
          key: models-${{ runner.os }}-${{ hashFiles('**/pyproject.toml', '**/poetry.lock', '**/requirements*.txt') }}

      - name: Upgrade pip & base tools
        shell: powershell
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit pytest httpx uvicorn ruff

      - name: Install dependencies (PEP621/Poetry/req)
        shell: powershell
        run: |
          if (Test-Path "pyproject.toml" -and (Select-String -Path "pyproject.toml" -Pattern "\[tool.poetry\]" -Quiet)) {
            pip install poetry
            poetry config virtualenvs.create false
            poetry install --no-interaction --no-root
          } elseif (Test-Path "pyproject.toml") {
            pip install -e ".[dev]" 2>$null
            if (Test-Path "requirements-dev.txt") { pip install -r requirements-dev.txt }
            if (Test-Path "requirements.txt")     { pip install -r requirements.txt }
          } else {
            if (Test-Path "requirements-dev.txt") { pip install -r requirements-dev.txt }
            if (Test-Path "requirements.txt")     { pip install -r requirements.txt }
          }

      - name: Lint & format (pre-commit)
        shell: powershell
        run: pre-commit run --all-files

      
      - name: Run tests (fast path)
        shell: powershell
        env:
          PYTEST_ADDOPTS: "-q --maxfail=1"
        run: |
          pytest
          if ($LASTEXITCODE -ne 0) {
            pytest -k "not slow"
          }

      - name: Upload pytest report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-report-windows
          path: |
            **/pytest.xml
            **/.pytest_cache
          if-no-files-found: ignore
